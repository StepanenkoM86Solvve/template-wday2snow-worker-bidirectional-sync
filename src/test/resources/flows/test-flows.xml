<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:wd-connector="http://www.mulesoft.org/schema/mule/wd-connector" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow" 
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/wd-connector http://www.mulesoft.org/schema/mule/wd-connector/current/mule-wd-connector.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">


	<servicenow:config name="ServiceNow_Test" username="${snow.test.user}" password="${snow.test.password}" serviceAddress="${snow.endpoint}" doc:name="ServiceNow"/>
    <wd-connector:config name="Workday__Basic_Test" username="${wday.test.user}" password="${wday.test.password}" tenantName="${wday.test.tenant}" hostName="${wday.hostname}" doc:name="Workday: Basic"/>

    <flow name="insertUserInServiceNowFlow" >
        <dw:transform-message doc:name="Create insert User request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sys_user
---
{
	ns0#insert: {
		ns0#active: payload.active,
		ns0#city: payload.city,
		ns0#country: payload.country,
		ns0#email: payload.email,
		ns0#"employee_number": payload.employeeNumber,
		ns0#"first_name": payload.firstName,
		ns0#"home_phone": payload.homePhone,
		ns0#"last_name": payload.lastName,
		ns0#"middle_name": payload.middleName,
		ns0#name: payload.name,
		ns0#state: payload.state,
		ns0#street: payload.street,
		ns0#"user_name": payload.userName,
		ns0#zip: payload.zip
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow_Test" type="sys_user||insert" doc:name="ServiceNow"/>
        <dw:transform-message doc:name="Get record sys_id">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.insertResponse."sys_id"]]></dw:set-payload>
        </dw:transform-message>

        <logger level="INFO" message="Insert User in Service Now result sys_id: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="updateUserInServiceNowFlow">

        <dw:transform-message doc:name="Create update User request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sys_user
---
{
	ns0#update: {
		ns0#active: payload.active,
		ns0#city: payload.city,
		ns0#country: payload.country,
		ns0#email: payload.email,
		ns0#"employee_number": payload.employeeNumber,
		ns0#"first_name": payload.firstName,
		ns0#"home_phone": payload.homePhone,
		ns0#"last_name": payload.lastName,
		ns0#"middle_name": payload.middleName,
		ns0#name: payload.name,
		ns0#state: payload.state,
		ns0#street: payload.street,
		ns0#"user_name": payload.userName,
		ns0#zip: payload.zip,
		ns0#"sys_id": payload.sysId
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow_Test" type="sys_user||update" doc:name="ServiceNow"/>
        <dw:transform-message doc:name="Get record sys_id">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.updateResponse."sys_id"]]></dw:set-payload>
        </dw:transform-message>

 <logger message="Update User in Service Now  - result sys_id: #[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="queryUserFromServiceNowFlow" >

        <dw:transform-message doc:name="Create getRecords by username request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sys_user
---
{
	ns0#getRecords: {
		ns0#"user_name": payload.userName	
	}
}]]></dw:set-payload>
        </dw:transform-message>
        
        <servicenow:invoke config-ref="ServiceNow_Test" type="sys_user||getRecords" doc:name="ServiceNow"/>

        <dw:transform-message doc:name="Get records result">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.getRecordsResponse.*getRecordsResult when (payload.getRecordsResponse != '' and payload.getRecordsResponse != null) otherwise []]]></dw:set-payload>
        </dw:transform-message>

        <logger level="INFO" message="Query user from Service Now result: #[payload]" doc:name="Logger"/>
    </flow>

    
    <sub-flow name="queryWorkerFromWorkdayFlow" >

<dw:transform-message doc:name="Prepare GetWorkersRequestType request">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 urn:com.workday/bsvc
---
ns0#Get_Workers_Request: 
{
	ns0#Request_References: {
		ns0#Worker_Reference: {
			ns0#ID @(ns0#type: "Employee_ID"): payload
		}
	},
	ns0#Response_Group: {
		ns0#Include_Employment_Information: true,
		ns0#Include_Organizations: true,
		ns0#Include_Personal_Information: true,
		ns0#Include_Reference: true,
		ns0#Include_Roles: true,
		ns0#Include_Transaction_Log_Data: true,
		ns0#Include_User_Account: true
	}
}]]></dw:set-payload>
                        </dw:transform-message>

        <wd-connector:invoke config-ref="Workday__Basic_Test" type="Human_Resources||Get_Workers" doc:name="Workday Human Resource"/>
        <dw:transform-message doc:name="Transform the response from Workday to Map">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 urn:com.workday/bsvc
---
using (worker = payload.ns0#Get_Workers_Response.ns0#Response_Data.*ns0#Worker.ns0#Worker_Data.ns0#Personal_Data)
{
	firstName : worker.ns0#Name_Data.ns0#Preferred_Name_Data.ns0#Name_Detail_Data.ns0#First_Name,
	lastName : worker.ns0#Name_Data.ns0#Preferred_Name_Data.ns0#Name_Detail_Data.ns0#Last_Name
}]]></dw:set-payload>
        </dw:transform-message>


    </sub-flow>

    
    <flow name="updateWorkerInWorkdayFlow" >

<dw:transform-message doc:name="Transform Pojo To ChangePreferredNameRequestType">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 urn:com.workday/bsvc
---
ns0#Change_Preferred_Name_Request: 
{
	ns0#Change_Preferred_Name_Data: {
		ns0#Name_Data: {
			ns0#Country_Reference: {
				ns0#ID @(ns0#type: "ISO_3166-1_Alpha-3_Code"):"USA"
			},
			ns0#First_Name : payload.firstName,
			ns0#Last_Name : payload.lastName			
		},
		ns0#Worker_Reference: {
			ns0#ID @(ns0#type: "Employee_ID"): payload.mgrID
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>

        <wd-connector:invoke config-ref="Workday__Basic_Test" type="Human_Resources||Change_Preferred_Name" doc:name="Workday Human Resource"/>


    </flow>

</mule>